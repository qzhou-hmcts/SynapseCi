# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

resources:
  repositories:
  - repository: adf_project
    type: github
    endpoint: hmcts
    name: qzhou-hmcts/datafactory
    ref: adf_publish
    trigger:  # CI trigger for this repository, no CI trigger if skipped (only works for Azure Repos)
      branches: 
        include: [ adf_publish ]

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  sqlDwPath: 'synapse'
  azure.subscription.endpoint: 'DTS-SHAREDSERVICES-SBOX'
stages:
- stage: 'build'
  displayName: 'Validate project'
  # condition: and(always(), eq(variables['Build.Reason'], 'PullRequest'))
  jobs:
  - job: 'validate_sql_packages'
    displayName: 'Validate sql project'
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: NuGetToolInstaller@1
    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'
    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
    - task: VSTest@2
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(sqlDwPath)/bin/$(buildConfiguration)/synapse.dacpac'
        ArtifactName: 'sql_dw_dacpac'
      displayName: 'Publish SQL DACPAC'  

- stage: 'Deploy'
  displayName: 'Deploy project'
  variables:
    environment: test
    azure.subscription.endpoint: 'DTS-SHAREDSERVICES-TEST'
  condition: and(succeeded('build'), ne(variables['build.sourceBranch'], 'refs/heads/master'))
  jobs:
  - template: pipeline/templates/jobs/deploy-azuresqldb-job.yml
    parameters:
      subscriptionEndpoint: $(azure.subscription.endpoint)
      env: test
  - template: pipeline/templates/jobs/deploy-adf-job.yml
    parameters:
      subscriptionEndpoint: $(azure.subscription.endpoint)
      adfName: mi-ingestion-adf-$(environment)
      adfOverrideParameters: '-mi_persistence_storage_mi_properties_typeProperties_serviceEndpoint "https://mipersistent$(environment).blob.core.windows.net"
       -MI_synapse_mi_connectionString "Server=tcp:mi-datawarehouse-server-$(environment).database.windows.net,1433;;Initial Catalog=mi-datawarehouse-db-$(environment);Database=mi-datawarehouse-db-$(environment);Connection Timeout=30"'
      adfFolder: mi-ccd-datafactory-test
      env: $(environment)
  - template: pipeline/templates/jobs/integration-tests-job.yml
    parameters:
      subscriptionEndpoint: $(azure.subscription.endpoint)
      adfName: mi-ingestion-adf-$(environment)

- stage: 'DeployStaging'
  displayName: 'Deploy project on staging env'
  condition: and(succeeded('build'), eq(variables['build.sourceBranch'], 'refs/heads/master'))
  variables:
    environment: stg
    azure.subscription.endpoint: 'DTS-SHAREDSERVICES-STG'
  jobs:
  - template: pipeline/templates/jobs/deploy-azuresqldb-job.yml
    parameters:
      subscriptionEndpoint: $(azure.subscription.endpoint)
      env: test
  - template: pipeline/templates/jobs/deploy-adf-job.yml
    parameters:
      subscriptionEndpoint: $(azure.subscription.endpoint)
      adfName: mi-synapse-datafactory-$(environment)
      env: $(environment)
      adfOverrideParameters: '-mi_persistence_storage_mi_properties_typeProperties_serviceEndpoint "https://mipersistent$(environment).blob.core.windows.net"
       -MI_synapse_mi_connectionString "Server=tcp:mi-datawarehouse-server-$(environment).database.windows.net,1433;;Initial Catalog=mi-datawarehouse-db-$(environment);Database=mi-datawarehouse-db-$(environment);Connection Timeout=30"'
  - template: pipeline/templates/jobs/integration-tests-job.yml
    parameters:
      subscriptionEndpoint: $(azure.subscription.endpoint)
      adfName: mi-synapse-datafactory-$(environment)

- stage: 'DeployProd'
  displayName: 'Deploy production'
  condition: and(succeeded('DeployStaging'), eq(variables['build.sourceBranch'], 'refs/heads/master'))
  variables:
    environment: prod
    azure.subscription.endpoint: 'DTS-SHAREDSERVICES-PROD'
  jobs:
  - template: pipeline/templates/jobs/deploy-azuresqldb-job.yml
    parameters:
      subscriptionEndpoint: $(azure.subscription.endpoint)
      env: $(environment)
  - template: pipeline/templates/jobs/deploy-adf-job.yml
    parameters:
      subscriptionEndpoint: $(azure.subscription.endpoint)
      adfName: mi-synapse-datafactory-$(environment)
      env: $(environment)
      adfOverrideParameters: '-mi_persistence_storage_mi_properties_typeProperties_serviceEndpoint "https://mipersistent$(environment).blob.core.windows.net"
      -MI_synapse_mi_connectionString "Server=tcp:mi-datawarehouse-server-$(environment).database.windows.net,1433;;Initial Catalog=mi-datawarehouse-db-$(environment);Database=mi-datawarehouse-db-$(environment);Connection Timeout=30"'
 