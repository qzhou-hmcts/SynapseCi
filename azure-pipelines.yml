# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

resources:
  repositories:
  - repository: mi_synapse_integration
    type: github
    endpoint: hmcts
    name: hmcts/mi-synapse-integration
    ref: adf_publish
    trigger:  # CI trigger for this repository, no CI trigger if skipped (only works for Azure Repos)
      branches: 
        include: [ adf_publish ]

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  sqlDwPath: 'synapse'
  azure.subscription.endpoint: 'DTS-SHAREDSERVICES-TEST'
  keyvault.name: 'mi-vault-test'
stages:
- stage: 'build'
  displayName: 'Validate project'
  # condition: and(always(), eq(variables['Build.Reason'], 'PullRequest'))
  jobs:
  - job: 'validate_sql_packages'
    displayName: 'Validate sql project'
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: VSTest@2
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(sqlDwPath)/bin/$(buildConfiguration)/synapse.dacpac'
        ArtifactName: 'sql_dw_dacpac'
      displayName: 'Publish SQL DACPAC'  
- stage: 'Deploy'
  displayName: 'Deploy project'
  condition: and(succeeded('build'), ne(variables['build.sourceBranch'], 'refs/heads/master'))
  jobs:

  - template: pipeline/templates/jobs/deploy-azuresqldb-job.yml
    parameters:
      environment: $(environment)
      subscriptionEndpoint: $(azure.subscription.endpoint)
      databaseServerName: 'mi-datawarehouse-server-test'
      databaseName: 'mi-datawarehouse-db-test'
      projectName: 'synapse'
      artifactName: 'sql_dw_dacpac'
      keyvaultName: 'mi-vault-test'
  - template: pipeline/templates/jobs/deploy-adf-job.yml
    parameters:
      environment: $(environment)
      subscriptionEndpoint: $(azure.subscription.endpoint)
      adfName: mi-ccd-datafactory-test
      resourceGroup: mi-test-rg
      adfOverrideParameters: '-AzureBlobStorage1_properties_typeProperties_serviceEndpoint "https://mipersistenttest.blob.core.windows.net"'
  - template: pipeline/templates/jobs/integration-tests-job.yml
    parameters:
      subscriptionEndpoint: $(azure.subscription.endpoint)
      databaseServerName: 'mi-datawarehouse-server-test'
      databaseName: 'mi-datawarehouse-db-test'
      adfName: 'mi-ccd-datafactory-test'
      resourceGroup: mi-test-rg
      keyvaultName: 'mi-vault-test'
      ssKeyvaultName: 'ss-vault-test'


- stage: 'DeployStaging'
  displayName: 'Deploy project on staging env'
  condition: and(succeeded('build'), eq(variables['build.sourceBranch'], 'refs/heads/master'))
  jobs:
  - template: pipeline/templates/jobs/deploy-azuresqldb-job.yml
    parameters:
      environment: 'stg'
      subscriptionEndpoint: DTS-SHAREDSERVICES-STG
      databaseServerName: $(sqlsrvrName)
      databaseName: 'mi-datawarehouse-db-stg'
      projectName: 'synapse'
      artifactName: 'sql_dw_dacpac'
      keyvaultName: 'mi-vault-stg'
  - template: pipeline/templates/jobs/deploy-adf-job.yml
    parameters:
      environment: $(environment)
      subscriptionEndpoint: $(azure.subscription.endpoint)
      adfName: mi-ccd-datafactory-stg
      resourceGroup: mi-stg-rg
      adfOverrideParameters: '-AzureBlobStorage1_properties_typeProperties_serviceEndpoint "https://mipersistentstg.blob.core.windows.net"'
  - template: pipeline/templates/jobs/integration-tests-job.yml
    parameters:
      subscriptionEndpoint: $(azure.subscription.endpoint)
      databaseServerName: $(sqlsrvrName)
      databaseName: 'mi-datawarehouse-db-stg'
      keyvaultName: 'mi-vault-stg'
      ssKeyvaultName: 'ss-vault-stg'
      adfName: 'mi-ccd-datafactory-stg'

- stage: 'DeployProd'
  displayName: 'Deploy production'
  condition: and(succeeded('DeployStaging'), eq(variables['build.sourceBranch'], 'refs/heads/master'))
  jobs:
  - template: pipeline/templates/jobs/deploy-azuresqldb-job.yml
    parameters:
      environment: prod
      subscriptionEndpoint: DTS-SHAREDSERVICES-STG
      databaseServerName: $(sqlsrvrName)
      databaseName: 'mi-datawarehouse-db-prod'
      projectName: 'synapse'
      artifactName: 'sql_dw_dacpac'
      keyvaultName: 'mi-vault-prod'
  - template: pipeline/templates/jobs/deploy-adf-job.yml
    parameters:
      environment: prod
      subscriptionEndpoint: $(azure.subscription.endpoint)
      adfName: mi-ccd-datafactory-prod
      resourceGroup: mi-prod-rg
      adfOverrideParameters: '-AzureBlobStorage1_properties_typeProperties_serviceEndpoint "https://mipersistentprod.blob.core.windows.net"'

 